(variables):
  delete: --delete-conflicting-outputs

install:
  (aliases): i
  (command): dart pub global activate --source path . --overwrite

build_runner:
  (aliases): br
  _: dart run build_runner

  watch:
    (aliases): w
    (command): "{$build_runner:_} watch {delete}"

  build:
    (aliases): b
    (command): "{$build_runner:_} build {delete}"

  clean:
    (aliases): c
    (command): "{$build_runner:_} clean"

pana: dart pub run pana

format: dart format .
analyze: dart analyze .

prep:
  (command):
    - "{$install}"
    - "{$format} --set-exit-if-changed"
    - "{$analyze} --fatal-infos --fatal-warnings"
    - "{$prep:_build}"
    - (+) {$prep:pubspec}
    - sip pub get -r
  _build:
    - sip run build_runner clean
    - sip run build_runner build
  pubspec: |
    # get version from changelog
    version=$(grep -m 1 "# " CHANGELOG.md | awk '{print $2}')

    echo "Updating pubspec.yaml version to $version"
    sed -i '' "s|^version: .*|version: $version|g" "pubspec.yaml"

publish:
  (bail):
  (command):
    - sip test --bail --recursive --concurrent
    - "{$prep}"
    - dart pub publish
    - "{$publish:commit}"
    - "{$publish:tag}"
    - "{$publish:_push}"
  commit: |
    # get version from changelog
    version=$(grep -m 1 "# " CHANGELOG.md | awk '{print $2}')

    echo "Committing version $version"
    git add .
    git commit -m "v$version"
  tag: |
    # get version from changelog
    version=$(grep -m 1 "# " CHANGELOG.md | awk '{print $2}')

    echo "Tagging version $version"
    git tag -a "v$version" -m "v$version"
  _push: |
    echo "Pushing to origin"
    git push
    git push --tags
